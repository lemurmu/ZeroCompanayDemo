<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<!--log 日志记录-->
		<section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>
		<!--SocketEngine-->
		<section name="superSocket" type="SuperSocket.SocketEngine.Configuration.SocketServiceConfig, SuperSocket.SocketEngine"/>
		<!--动态脚本-->
		<section name="microsoft.scripting" requirePermission="false" type="Microsoft.Scripting.Hosting.Configuration.Section, Microsoft.Scripting"/>
		<!--自定义节点-->
		<section name="setting" type ="SuperSocket.Config.SubProtocolsConfig,SuperSocketServer"/>
	</configSections>
	<connectionStrings>
		<add name="SqliteDB" connectionString="Data Source=     ......."/>
	</connectionStrings>

	<!--服务信息描述，在window服务模式下的名称标识-->
	<appSettings>
		<add key="ServiceName" value="SupperSocketService"/>
		<add key="ServiceDescription" value="MySuperSocket"/>
	</appSettings>

	<!--自定义节点-->
	<setting>
		<SubProtocols>
			<SubProtocol name="testservice" service="testservice.applicationservice.testservice, testservice.applicationservice"
							 contract="testservice.contract.itestservice, testservice.contract" uri="net.tcp://localhost:10001/testservice"/>
			<SubProtocol name="testservice1" service="testservice.applicationservice.testservice, testservice.applicationservice"
						 contract="testservice.contract.itestservice, testservice.contract" uri="net.tcp://localhost:10001/testservice"/>
			<SubProtocol name="testservice2" service="testservice.applicationservice.testservice, testservice.applicationservice"
						 contract="testservice.contract.itestservice, testservice.contract" uri="net.tcp://localhost:10001/testservice"/>
		</SubProtocols>
	</setting>

	<!--SuperSocket服务配置信息 serverType是项目的服务，如我自定义的MyServer-->
	<!--name: 实例名称
      textEncoding 编码方式"gb2312","utf-8" 默认是acii
      serverType: 实例运行的AppServer类型。逗号左边的是你自定义的server在项目中的位置,逗号右边是项目名
      ip: 服务器ip
      port: 侦听端口-->
	<superSocket>
		<servers>
			<server name="SuperSocketServer"
					textEncoding="utf-8"
					serverType="SuperSocket.MyServer,SuperSocketServer"
					ip="Any"
					port="2000"
					receiveBufferSize="32"
                    maxConnectionNumber="100"
                    clearIdleSession="true"
					commandLoader="dynamicCommandLoader"
                    policyFile="Policy\flash.xml">
				<!--定义属性-->

				<!--还可以定义节点-->
				<!--<subProtocols name="TestService" service="TestService.ApplicationService.TestService, TestService.ApplicationService"
                         contract="TestService.Contract.ITestService, TestService.Contract" uri="net.tcp://localhost:10001/TestService">
					-->
				<!--Your configuration-->
				<!--
				</subProtocols>-->
			</server>
			<!--多服务-->
			<!--<server name="TelnetServerA"
              serverTypeName="TelnetServer"
              ip="Any" port="2020">
			</server>
			<server name="TelnetServerB"
				serverTypeName="TelnetServer"
				ip="Any" port="2021">
			</server>-->

			<!--<server name="SampleServer"
				   serverType="GameServer.MyGameServer, GameServer"
				   ip="Any" port="2012">
				<commandAssemblies>
					-->
			<!--此处配置要绑定命令的程序集 如果命令的程序集和Server不在同一程序集中 SuperSocket通过反射找不到-->
			<!--
					<add assembly="BasicModules"></add>
				</commandAssemblies>
			</server>-->
		</servers>
		<!--命令加载器配置节  主动加载！！！-->
		<!--<commandLoaders>
				<add name="MyCommandLoader"
				   type="GameServer.MyCommandLoader, GameServer" />
			</commandLoaders>-->
		<commandLoaders>
			<add name="dynamicCommandLoader" type="SuperSocket.Dlr.DynamicCommandLoader, SuperSocket.Dlr"/>
		</commandLoaders>
	</superSocket>

	<microsoft.scripting>
		<languages>
			<language extensions=".py" displayName="IronPython"
				type="IronPython.Runtime.PythonContext, IronPython"
				names="IronPython;Python;py"/>
		</languages>
	</microsoft.scripting>
	
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6" />
	</startup>
</configuration>